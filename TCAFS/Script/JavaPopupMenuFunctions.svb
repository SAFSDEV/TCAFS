Option Explicit

'##############################################################################
'#
'#    JavaPopupMenuFunctions.SVB  SCRIPT
'#                                                                         
'#
'# MODULE DESCRIPTION:
'#
'#      All of these routines expect a popup menu to be active for the call.
'#
'# SUPPORTED ACTION COMMANDS:
'#
'#      SelectUnverifiedPopupMenuItem   'Blindly select a text popup menuitem
'#      SelectPopupMenuItem             'Select a text popup menuitem
'#
'#
'# Orig Author: Carl Nagle
'# Orig   Date: OCT 1, 2013
'# History:
'#
'#
'##############################################################################

'# PUBLIC DEPENDENCIES


'# PRIVATE DEPENDENCIES
'USEUNIT GenericMasterFunctions_X
'USEUNIT StepDriver
'USEUNIT StepDriver_X

'USEUNIT DDGUIUtilities
'USEUNIT GenericMasterFunctions
'USEUNIT GenericObjectFunctions
'USEUNIT LogUtilities
'USEUNIT LogUtilities_X
'USEUNIT StringUtilities
'USEUNIT StringUtilities_X
'USEUNIT MenuUtilities_X
'USEUNIT DDUtilities_X
'USEUNIT PopupMenuFunctions

'############################################################################
'#
'#   Sub SelectPopupMenuItem(mode)
'#
'# DESCRIPTION:
'#
'#      Attempts to select a particular text string menuitem in the currently 
'#      active Java popup menu.  The menuitem should be specified in the form 
'#      "Menu->Menu->MenuItem   CTRL+V" with the full text, spaces(if any), and 
'#      keyboard shortcut text (if any).  
'#
'#      Ampersands preceding underlined characters are optional.
'#      The routine first verifies that the specified menuitem exists
'#      and exits with error if it does not.
'#      If it does exist then the selection proceeds using the MenuID retrieved
'#      from the found menuitem.
'#
'#      The routine expects that the popup menu is currently active.
'#
'# PARAMETERS:
'#
'#      mode   0 | 1: 0=unverified version, 1=verified version
'#
'#    
'# DATA TABLE PARAMETERS:
'#
'#      FLD     CONTENT
'#      ---     ------------------------------    
'#       5      Menu->MenuItem hierarchy string to identify which menuitem to select.
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Carl Nagle
'# Orig   Date: Oct 01, 2013
'# History:
'#
'############################################################################
Sub SelectPopupMenuItem(mode)

    Dim hMenu
    Dim menuitemPath
    Dim success
    Dim errCount
    Dim mArray, mLength
    
    On Error Resume Next
    if mode > 1 then mode = 1
    if mode < 0 then mode = 1
    'mode is not yet used
        
    with otrd
    
        .statuscode = SDGeneralScriptFailure
        success = False

        menuitemPath = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if menuitemPath = "" then 
            LogMessage "Missing required MENUITEM string for "& .TestCommand & _
                       " in table "& .FileName &" at line "& _
                       .LineNumber, FAILED_MESSAGE, _
                       .InputRecord
            exit sub
        end if

        'For Java Swing application, TestComplete provides an extended property SwingPopupMenu, which can
        'be used to handle click, select operations and get informations of the Menu.
        Set hMenu = getValidMenuObject(.compGUIID)
        if hMenu is Nothing then
            LogMessage .TestCommand &" for JavaPopupMenus only supported for SwingPopupMenus at this time."& _
                       "Failure in table "& .FileName &" at line "& _
                       .LineNumber, FAILED_MESSAGE, _
                       .InputRecord
            Exit Sub
        end if
        if hMenu.Count < 1 then
            LogMessage .TestCommand &" for SwingPopupMenu found no active menu items.  "& _
                       "No active popup or wrong child used in table "& .FileName &" at line "& _
                       .LineNumber, FAILED_MESSAGE, .InputRecord
            Exit Sub
        end if

        success = clickMenuItemsOnPath(hMenu, menuitemPath, MUHierarchySeparator)
                
        if success then
            .statuscode = SDNoScriptFailure
            LogMessage "Selecting "& .WindowName &":"& .compName &" MenuItem '"& menuitemPath &"'...", PASSED_MESSAGE, "" 
        else        
            LogMessage .TestCommand &" failed for MenuItem '"& menuitemPath & _
                       " in table "& .FileName &" at line "& _
                       .LineNumber, FAILED_MESSAGE, _
                       .InputRecord
        end if
    End With
    
End Sub

Function getValidMenuObject(tcobject)
    Dim menu, parent
    On Error Resume Next
    Set getValidMenuObject = Nothing 
    if NOT aqObject.IsSupported(tcobject, "SwingPopupMenu") then
        Exit Function
    end if
    Set menu = tcobject.SwingPopupMenu
    if NOT aqObject.IsSupported(menu, "Count") then
        Set parent = tcobject.Parent
        if aqObject.IsSupported(parent, "SwingPopupMenu") then
            Set getValidMenuObject = getValidMenuObject(parent)
        end if
    else
        Set getValidMenuObject = menu
    end if
End Function

'############################################################################
'#
'#   Sub NetPopUpMenuMain ()
'#
'# DESCRIPTION:
'#
'#      Entry point to process a StepDriver ACTION COMMAND on a POPUP MENU.
'#      The routine merely reads the Global otrd.testcommand and 
'#      calls the appropriate subroutine to process it.  
'#
'#      If the testcommand is unrecognized it will log a WARNING_MESSAGE and
'#      exit with a WARNING status.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      none    -   the called subroutine has the requirements
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: John Crunk
'# Orig   Date: SEP 28, 2006
'# History:
'#
'#      SEP 28, 2006    Original Release
'#
'############################################################################
Sub JavaPopupMenuMain()

    On Error Resume Next
    SAFSDebug "JavaPopupMenuFunctions processing '"& otrd.testcommand &"'...", DEBUG_INFO

    'do stuff in here
    Select Case UCase(otrd.testcommand)
                
        Case "SELECTPOPUPMENUITEM"
            
            SelectPopupMenuItem 1
            
        Case "SELECTUNVERIFIEDPOPUPMENUITEM"
            
            SelectPopupMenuItem 0
            
        Case "SELECTMENUITEM"
            
            SelectPopupMenuItem 1
            
        Case Else
            
            HandleGenericCommand
            
    End Select
End Sub