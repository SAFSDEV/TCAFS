Option Explicit

'##############################################################################
'#
'#    DOJOCOMBOBOXFUNCTIONS.SVB  LIBRARY
'#                                                                        
'# MODULE DESCRIPTION:
'#
'#      Routines and utilities to work on SQA Type=COMBOBOX objects in 
'#      Data-Driven Automation.
'#
'# SUPPORTED ACTION COMMANDS:
'#
'#      Select                  'Select a text item in the drop down list
'#      SelectUnverified        'Select a text item in the drop down list without verifying the selection.
'#      SelectPartialMatch      'Select a text item in the drop down list based on a partial match.
'#      SelectIndex             'Select an item in the drop down list by index
'#      SetTextValue            'Assign a value to the Combo List Box
'#      SetUnverifiedTextValue  'Assign a value to the Combo List Box but do not verify return
'#
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################

'# SCRIPT CONSTANTS

'# PUBLIC DEPENDENCIES

'# PRIVATE DEPENDENCIES
'USEUNIT DDGUIUtilities
'USEUNIT DDGUIUtilities_X
'USEUNIT DDUtilities_X
'USEUNIT DDUtilities
'USEUNIT GenericMasterFunctions
'USEUNIT GenericMasterFunctions_X
'USEUNIT GenericObjectFunctions
'USEUNIT GraphicControlFunctions
'USEUNIT ImageUtilities
'USEUNIT ImageUtilities_X
'USEUNIT LogUtilities
'USEUNIT LogUtilities_X
'USEUNIT StepDriver
'USEUNIT StepDriver_X
'USEUNIT StringUtilities
'USEUNIT WindowFunctions
'USEUNIT FileUtilities

'##############################################################################
'#get the current text in the ComboBox
'#Parameter:
'#   combo   The combo box object, dojo class is 'dijit/form/ComboBox', 
'#                                 tc recognized classname 'dijit dijitReset dijitInline dijitLeft dijitTextBox dijitComboBox dijitValidationTextBox'
'#   currvalue (out) will be filled with the current text in the ComboBox
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################
Function GetCurrentComboBoxText (combo, currvalue)
    Dim status    

    With otrd
        'Find the TextBox contained in the ComboBox
        Dim props(2), values(2), object
        props(0) = "VisibleOnScreen"
        values(0) = True
        props(1) = "ObjectType"
        values(1) = "Textbox"
        props(2) = "className"
        values(2) = "dijitReset dijitInputInner"
        
        On Error Resume Next        
        Set object = combo.FindChild(props, values, 3)
        if object.Exists then
            status = DDGGetGUIPropertyString(object, "Text", currvalue)
            if status <> 0 then status = DDGGetGUIPropertyString(object, "value", currvalue)                
        end if

    End With
    
    GetCurrentComboBoxText = status
End Function

'##############################################################################
'#Click the ArrowButton of the ComboBox
'#Parameter:
'#   combo   The combo box object, dojo class is 'dijit/form/ComboBox', 
'#                                 tc recognized classname 'dijit dijitReset dijitInline dijitLeft dijitTextBox dijitComboBox dijitValidationTextBox'
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################
Function ComboBoxClick(combo)

    'Find the ArrowButton contained in the ComboBox
    Dim props(2), values(2), object
    props(0) = "VisibleOnScreen"
    values(0) = True
    props(1) = "ObjectType"
    values(1) = "Textbox"
    props(2) = "className"
    values(2) = "dijitReset dijitInputField dijitArrowButtonInner"
        
    On Error Resume Next
    ComboBoxClick = False        
    Set object = combo.FindChild(props, values, 3)
    if object.Exists then
        object.Click
        if Err.Number=0 then 
            ComboBoxClick = True
        else
            SAFSDebug "DojoComboBoxFunctions.ComboBoxClick: Fail to click arrow button: Err="&Err.Number, DEBUG_WARN
        end if
    else
        SAFSDebug "DojoComboBoxFunctions.ComboBoxClick: Fail to find the Arrow Button.", DEBUG_WARN
    end if
End Function

'##############################################################################
'#Get the Popup Object of the ComboBox
'#Parameter:
'#   combo   The combo box object, dojo class is 'dijit/form/ComboBox', 
'#                                 tc recognized classname 'dijit dijitReset dijitInline dijitLeft dijitTextBox dijitComboBox dijitValidationTextBox'
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################
Function GetComboBoxPopup(combo)

    Dim parent
    Dim props(2), values(2), object

    Set GetComboBoxPopup = Nothing
    
    On Error Resume Next        
    'Get the Page object
    Set parent = combo
    Do While parent.ObjectType<>"Page"
        Set parent = parent.Parent
    Loop
    
    'Prepare the properties-values to find the popup related to the combo box
    props(0) = "className"
    values(0) = "dijitPopup dijitComboBoxMenuPopup"
    
    'Get the ComboBox's IdStr, which is used to find the related popup menu
    if aqObject.IsSupported(combo, "ObjectIdentifier") then
        props(1) = "ObjectIdentifier"
        values(1) = "*" & combo.ObjectIdentifier & "*"
    elseif aqObject.IsSupported(combo, "idStr") then 
        props(1) = "idStr"
        values(1) = "*" & combo.idStr & "*"
    end if
    
    props(2) = "Visible"
    values(2) = True    

    'Find the Popup related to the ComboBox
    ComboBoxClick = False        
    Set object = parent.FindChild(props, values, 5)
    if object.Exists then
        Set GetComboBoxPopup = object
    else
        SAFSDebug "DojoComboBoxFunctions.GetComboBoxPopup: Fail to find the Popup.", DEBUG_WARN
    end if

End Function

'##############################################################################
'#Get the Popup Object of the ComboBox
'#Parameters:
'#   popup the popup window, @see function GetComboBoxPopup()
'#   itemText the combo box item's text
'#   match: 1: partial match   otherwise: exact match
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################
Function GetComboBoxItem(popup, itemText, match)

    'Find the combo box item to click
    Dim props(1), values(1), object
        
    On Error Resume Next
    'prepare the properties-values to find the combo box item
    props(0) = "className"
    values(0) = "dijitReset dijitMenuItem"
    props(1) = "contentText"
    if match = 1 then
        values(1) = "*" & itemText & "*"
    else
        values(1) = itemText
    end if        
        
    Set object = popup.FindChild(props, values, 5)
    If Not object.Exists Then    
        props(1) = "innerText"
        Set item = popup.FindChild(props, values, 5)
    End If

    if object.Exists then
        Set GetComboBoxItem = object
    else
        SAFSDebug "DojoComboBoxFunctions.GetComboBoxItem: Fail to find the ComboBox Item '"&itemText&"'", DEBUG_WARN
    end if 

End Function

'##############################################################################
'#Roll the combo box pop up to make the item visible on screen
'#Parameters:
'#   popup the popup window, @see function GetComboBoxPopup()
'#   item  the combo box item, @see function GetComboBoxItem(popup, itemText, match)
'#   millis timeout to wait for the item to be visible on screen, in milliseconds. If <0, wait forever
'# History:
'#
'#      DEC 05, 2013    (Lei Wang) Original Release
'##############################################################################
Function ClickComboBoxItem(popup, item, millis)
    Dim StartTime, TimeoutSeconds, waitForever

    On Error Resume Next
    waitForever=True
    If millis>0 Then
        waitForever=False
        ' Convert the timeout value from milliseconds to seconds (round to larger)
        TimeoutSeconds = millis / 1000
        If millis Mod 1000 <> 0 Then
          TimeoutSeconds = TimeoutSeconds + 1
        End If
    End If
            
    ClickComboBoxItem = False     
    StartTime = Now
    If item.Exists Then
        Do
            popup.Keys "[Down]"
            'PageDown doesn't work well for this popup menu
            'popup.Keys "[PageDown]"
        Loop While Not (item.Visible And item.VisibleOnScreen) And (waitForever Or (DateDiff("s", StartTime, Now)<TimeoutSeconds))
        'SAFSDebug "passed time=" & DateDiff("s", StartTime, Now)
        
        If item.Visible And item.VisibleOnScreen Then
            item.Click
            If Err.Number=0 Then
                ClickComboBoxItem = True
            Else
                SAFSDebug "DojoComboBoxFunctions.ClickComboBoxItem: Fail to click the ComboBox Item Err.Number="&Err.Number, DEBUG_WARN
            End If
        Else
            SAFSDebug "DojoComboBoxFunctions.ClickComboBoxItem: Item has not been visible within" & TimeoutSeconds & " seconds.", DEBUG_WARN
        End If
    End If

End Function

'##############################################################################
'#Get the text value of the combo box item
'#Parameters:
'#   item  the combo box item, @see function GetComboBoxItem(popup, itemText, match)
'# History:
'#
'#      DEC 06, 2013    (Lei Wang) Original Release
'##############################################################################
Function GetComboBoxItemValue(item)
    Dim textvalue
        
    On Error Resume Next
    if aqObject.IsSupported(item, "contentText") then
        textvalue = item.contentText
    end if
    if textvalue="" and aqObject.IsSupported(item, "innerText") then
        textvalue = item.innerText
    end if

    if textvalue="" then
        SAFSDebug "DojoComboBoxFunctions.GetComboBoxItemValue: Fail to get ComboBox Item value!", DEBUG_WARN
    end if
            
    GetComboBoxItemValue = textvalue
    
End Function

'##############################################################################
'#Make the window to be visible on screen
'#Parameters:
'#   window     The window containing the combo box
'#   combobox   The combo box object, dojo class is 'dijit/form/ComboBox',
'# History:
'#
'#      DEC 10, 2013    (Lei Wang) Original Release
'##############################################################################
Function ActivateWindow(window, combobox)
    On Error Resume Next
    DDGActivateNotCurrentWindow window
    combobox.Click
    If Err.Number=0 Then
        ActivateWindow = True
    Else
        ActivateWindow = False
    End If
End Function

'############################################################################
'# DESCRIPTION:
'#
'#      Select an item by its text value from a combobox.  
'#      This method combines the initial Click required to expose the list 
'#      of items and then the subsequent selection of a text item from the list.
'#
'#      The routine will first attempt to see if the item exists in the list 
'#      and should provide a warning if it cannot find the item or cannot 
'#      read the list of items.  The routine will then attempt the selection.
'#
'#      After the selection is attempted, the routine tries to verify that the 
'#      list has the specified item as the selected item.  A warning will be 
'#      issued if the routine cannot read the list.  A failure will be issued 
'#      if the routine CAN read the list and determines that the specified 
'#      item is NOT the currently selected item.
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      5   Field 5 should contain the case-sensitive text item to select.
'#          You can enclose this text in double-quotes to ensure proper retrieval.
'# PARAMETERS:
'#   match: 1: partial match   otherwise: exact match
'#
'# ERRORS:
'#
'#      none
'# History:
'#
'#      DEC 06, 2013    (Lei Wang)    Original Release
'############################################################################
Sub ComboBoxSelect(match)

    Dim selection, itemValue
    Dim popup, item
    
    with otrd

        .statuscode = SDGeneralScriptFailure

        On Error Resume Next
        selection = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if selection = "" then
            LogMessage "ComboBox Select criteria missing "& _
                       "in table "& .FileName & _
                       "at line "& .LineNumber &".", _
                       FAILED_MESSAGE, .InputRecord
            .StatusCode = SDNoScriptFailure
            exit sub        
        end if
        
        If Not ActivateWindow(.windowGUIID, .compGUIID) Then
            SAFSDebug "ComboBoxSelect: Can not activate the window!", DEBUG_WARN
        End If
        
        if Not ComboBoxClick(.compGUIID) then
            LogMessage "Fail to show the combo box's popup!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end if
        
        Set popup = GetComboBoxPopup(.compGUIID)
        If Not popup.Exists Then
            LogMessage "Fail to get the combo box's popup!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end If

        Set item = GetComboBoxItem(popup, selection, match)
        If Not item.Exists Then
            LogMessage "Fail to get the combo box's item!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end If
        
        itemValue = GetComboBoxItemValue(item)
        SAFSDebug "ComboBoxSelect: item '" & itemValue & "' has been found", DEBUG_INFO
        if Not ClickComboBoxItem(popup, item, -1) then
            LogMessage "Fail to click the combo box's item '" &itemValue& "'", FAILED_MESSAGE, .InputRecord
            exit sub
        end if

        If Err.Number<>0 Then
            SAFSDebug "ComboBoxSelect: During select item '"&selection&"': Met Err="&Err.Number, DEBUG_WARN   
        End If
        
        .StatusCode = SDNoScriptFailure  
        LogMessage .WindowName &":"& .CompName &" '"& itemValue &"' selected.", PASSED_MESSAGE, ""
        
    End With
    
End Sub

'############################################################################
'#
'#   Function SelectComboBoxIndex()
'#
'# DESCRIPTION:
'#
'#      Select an item in a combobox, the item is indicated by index
'#      This function will use the key 'Down' to select the item.
'#      
'# PARAMETERS:
'#
'#      combobox -   the combo box
'#      index    -   the item to click, 0-based
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: MAY 11, 2012
'# History:
'#
'#      MAY 11, 2012    Original Release
'############################################################################
Function SelectComboBoxIndex(combobox, index)
    
    Err.Clear
    'Click the combo box to show the DropDownList
    'combobox.Click
    combobox.DropDown

    'Scroll up to the first page
    Dim selectedIndex, preSelectindex
    
    selectedIndex = getSelectItemIndex(combobox) 
    Do
        combobox.Keys "[PageUp]"
        
        preSelectindex = selectedIndex
        selectedIndex = getSelectItemIndex(combobox)

        If selectedIndex=0 Or selectedIndex=-1 Or selectedIndex=-999 Then
            '0      first item of combobox is selected
            '-1     No item is selected
            '-999   Something wrong during calling of getSelectItemIndex()
            Exit Do
        else if selectedIndex = preSelectindex then 'selectedIndex does not change  even pressed [PageUp]
        'In cases like WPF ComboBox, [PageUp] just higtlights top item on one page, but does not change component's vlaue and makes the item selected 
        'To select a highlighted item and change component's vlaue, we need an extra operation-- pressing [Enter]
                combobox.Keys "[Enter]"  ' comboBox will be collapsed, pulled back
                selectedIndex = getSelectItemIndex(combobox) 
                combobox.DropDown 'expand it again
            End if       
        End If
    Loop While True
        
    If selectedIndex=-999 Then
        SAFSDebug "SelectComboBoxIndex: Selected index is -999.", DEBUG_ERROR
        SelectComboBoxIndex = False
        Exit Function
    Else
        SAFSDebug "Selected index is '&selectedIndex&'.", DEBUG_ERROR
    End If
    
    'Input "Down" keys for 'index' times
    Dim i        
    For i=selectedIndex To index-1
        combobox.Keys "[Down]"
    Next
        
    'Finally input key 'Enter'
    combobox.Keys "[Enter]"
    
    If Err.Number<>0 Then
        SelectComboBoxIndex = False
    Else
        SelectComboBoxIndex = True    
    End If
    
End Function

'############################################################################
'#
'#   Function getSelectItemIndex()
'#
'# DESCRIPTION:
'#
'#      Get the selected index
'#      
'# PARAMETERS:
'#
'#      combobox -   the combo box
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: MAY 11, 2012
'# History:
'#
'#      MAY 11, 2012    Original Release
'############################################################################
Function getSelectItemIndex(combobox)
    Err.Clear
    With otrd
        If .environment = DDU_FLEX_ENVIRONMENT Then
            getSelectItemIndex = combobox.SelectedItem
        Else
            getSelectItemIndex = combobox.wSelectedItem
        End If
    End With
    
    If Err.Number<>0 Then
        SAFSDebug "getSelectItemIndex: Can't get correct selected index. Err="&Err.Number, DEBUG_ERROR
        getSelectItemIndex = -999   
    End If        
End Function

Sub ComboVerifySelected

    Dim selection
    Dim value
    Dim index
    Dim indexstring
    Dim status
    Dim smatch
    Dim coords
    
    with otrd

        .statuscode = SDGeneralScriptFailure
               
        selection = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if selection = "" then
            LogMessage "ComboBox VerifySelected criteria missing "& _
                       "in table "& .FileName & _
                       "at line "& .LineNumber &".", _
                       FAILED_MESSAGE, .InputRecord
            .StatusCode = SDNoScriptFailure
            exit sub        
        end if
        
        'may be a problem if clicking it makes it go away
        status = GetListBoxSelection(value)
        
        if status <> 0 then
            LogMessage "ComboBox selection could not be verified. TC("& CStr(status)& ")"& _
                       " in table "& .FileName &" at line "& .LineNumber &".", _
                       WARNING_MESSAGE, .InputRecord
                       .statuscode = SDScriptWarning
            .StatusCode = SDScriptWarning
            exit sub
        end if            
        if StrComp(value, selection, 0) <> 0 then
            LogMessage .WindowName &":"& .CompName &" "& .testCommand &" '"& selection &"' failed "& _
                   "in table "& .FileName &"at line "& .LineNumber &".", _
                   FAILED_MESSAGE, "Expected: '"& selection &"', Actual: '"& value &"'."
            exit sub
        end if
        
        .StatusCode = SDNoScriptFailure  
        LogMessage .WindowName &":"& .CompName &" "& .testCommand &" '"& value &"' verified.", PASSED_MESSAGE, ""
        
    End With
    
End Sub


'############################################################################
'#
'#   Sub ComboBoxSelectUnverified ()
'#
'#
'# DESCRIPTION:
'#
'#      Select an item by its text value from a combobox without verifying the selection.  
'#      This method combines the initial Click required to expose the list 
'#      of items and then the subsequent selection of a text item from the list.
'#
'#      The routine will simply take the specified text and attemp the selection.
'#      it will not verify the existence of the item before the attemp, nor
'#      will it verify the item is actually selected after the attemp.</p>
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      5   Field 5 should contain the case-sensitive text item to select.
'#          You can enclose this text in double-quotes to ensure proper retrieval.
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: John Crunk
'# Orig   Date: SEP 14, 2006
'# History:
'#
'#      SEP 14, 2006    Original Release
'#
'############################################################################
Sub ComboBoxSelectUnverified()
    Dim selection, itemValue
    Dim popup, item
    
    with otrd

        .statuscode = SDGeneralScriptFailure

        On Error Resume Next
        selection = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if selection = "" then
            LogMessage "ComboBox Select criteria missing "& _
                       "in table "& .FileName & _
                       "at line "& .LineNumber &".", _
                       FAILED_MESSAGE, .InputRecord
            .StatusCode = SDNoScriptFailure
            exit sub        
        end if
        
        If Not ActivateWindow(.windowGUIID, .compGUIID) Then
            SAFSDebug "ComboBoxSelect: Can not activate the window!", DEBUG_WARN
        End If
        
        if Not ComboBoxClick(.compGUIID) then
            LogMessage "Fail to show the combo box's popup!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end if
        
        Set popup = GetComboBoxPopup(.compGUIID)
        If Not popup.Exists Then
            LogMessage "Fail to get the combo box's popup!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end If

        Set item = GetComboBoxItem(popup, selection, match)
        If Not item.Exists Then
            LogMessage "Fail to get the combo box's item!", FAILED_MESSAGE, .InputRecord
            exit sub         
        end If
        
        itemValue = GetComboBoxItemValue(item)
        SAFSDebug "ComboBoxSelect: item '" & itemValue & "' has been found", DEBUG_INFO
        if Not ClickComboBoxItem(popup, item, -1) then
            LogMessage "Fail to click the combo box's item '" &itemValue& "'", FAILED_MESSAGE, .InputRecord
            exit sub
        end if

        If Err.Number<>0 Then
            SAFSDebug "ComboBoxSelect: During select item '"&selection&"': Met Err="&Err.Number, DEBUG_WARN   
        End If
        
        .StatusCode = SDNoScriptFailure  
        LogMessage .WindowName &":"& .CompName &" "& itemValue &" selected.", PASSED_MESSAGE, ""
        
    End With    
End Sub

'############################################################################
'#
'#   Sub ComboBoxSelectIndex ()
'#
'#
'# DESCRIPTION:
'#
'#      Select an item by its index value from a combobox.  
'#      This method combines the initial Click required to expose the list 
'#      of items and then the subsequent selection of an index item from the list.
'#
'#      Some combo lists are 0-based (start with 0).  Some are 1-based (start with 1). 
'#      The user will have to determine the index base for their particular 
'#      combo list.  It would appear that HTML Combo lists are 1-based.
'#
'#      The routine will first attempt to see if the item exists in the list 
'#      and should provide a warning if it cannot find the item or cannot 
'#      read the list of items.  The routine will then attempt the selection.
'#
'#      After the selection is attempted, the routine tries to verify that the 
'#      list has the specified item as the selected item.  A warning will be 
'#      issued if the routine cannot read the list.  A failure will be issued 
'#      if the routine CAN read the list and determines that the specified 
'#      item is NOT the currently selected item.
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      5   Field 5 should contain the item index to select.
'#          You can enclose this index text in double-quotes to ensure proper retrieval.
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: John Crunk
'# Orig   Date: SEP 14, 2006
'# History:
'#
'#      SEP 14, 2006    Original Release
'#      MAY 29, 2012    (Lei Wang) If the verification fail, just write warning message to debug log.
'#                               Some combo box contains disordered item, see defect S0866828.
'############################################################################
Sub ComboBoxSelectIndex()

    Dim selection
    Dim WantedIndex
    Dim status
    Dim selectedIdx

    with otrd

        .statuscode = SDGeneralScriptFailure
        selection = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        Err.Clear
        WantedIndex = CInt(selection)
        if selection = "" Or Err.Number<>0 then
            LogMessage "ComboBox SelectIndex criteria index='"&selection&"' missing or wrong"& _
                       "in table "& .FileName & _
                       "at line "& .LineNumber &".", _
                       FAILED_MESSAGE, .InputRecord
            .StatusCode = SDGeneralScriptFailure
            exit sub        
        end if

        .windowGUIID.Activate
        Err.Clear
        .compGUIID.ClickItem WantedIndex

        If Err.Number=0 Then
            'verify the selected index is what we have clicked.
            selectedIdx = -1
            if .environment = DDU_FLEX_ENVIRONMENT then
              selectedIdx = .compGUIID.SelectedItem 'Flex ComboBox
            else
              selectedIdx = .compGUIID.wSelectedItem
            end if 
            
            SAFSDebug "WantedIndex='"&WantedIndex&"', currentIndex='"&selectedIdx&"'", DEBUG_DEBUG   
            if selectedIdx <> WantedIndex then
                SAFSDebug "SelectIndex warn: WantedIndex='"&WantedIndex&"' doesn't equal to "& _
                       " SelectedIndex='"& selectedIdx, DEBUG_WARN
            end if
        Else
            SAFSDebug "Fail to click at Index='"&WantedIndex&"', during calling ClickItem met Error="&Err.Number, DEBUG_DEBUG 
            LogMessage "SelectIndex fail to click at Index='"&WantedIndex&"' in table "& .FileName & _
                   "at line "& .LineNumber &".", _
                   FAILED_MESSAGE, .InputRecord
            .StatusCode = SDGeneralScriptFailure
            exit sub        
        End If

        .StatusCode = SDNoScriptFailure
        LogMessage .WindowName &":"& .CompName &" "& .testcommand &" "& selection &" attempted.", GENERIC_MESSAGE, ""
        
    End With
    
End Sub


'############################################################################
'#
'#   Sub ComboSetTextValue ()
'#
'#
'# DESCRIPTION:
'#
'#      Routine to set the text of the Combobox.  This version allows the use 
'#      of special character combinations and substrings to identify specific 
'#      keyboard keys.  These are the same special characters and interpretation 
'#      used for Robot's InputKeys command and the Windows Scripting Host.
'#
'#      ~^+%{( are primarily the characters that induce special processing.
'#
'#      The routine verifies we can read the text property, sets the text value 
'#      and will verify that the property has been set to that value *IF* none 
'#      of the special characters exist in the provided text value.  If those 
'#      special characters exist, then no post-set verification will occur.
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      FLD     CONTENT
'#      ---     ------------------------------    
'#       5      Text to send to Combobox.  Quoted text may be used to ensure proper
'#              expected value retrieval.
'#              There is also no check for a missing field because that would be
'#              the same as specifying no text ("")--which is valid.
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: John Crunk
'# Orig   Date: SEP 14, 2006
'# History:
'#
'#      SEP 14, 2006    Original Release
'#
'############################################################################

Sub ComboSetTextValue()

    Dim status
    Dim currvalue
    Dim tablevalue
    Dim newvalue
    
    On Error Resume Next
    
    with otrd

        .statuscode = SDGeneralScriptFailure
        
        .windowGUIID.Activate

        'what is this block about?
        '=========================
        'varStyle = .compGUIID.Style
        'If varStyle = "2" Then
        '    ComboBoxClick 
        '    Exit Sub
        'End If
        
        tablevalue = GetTrimmedQuotedField(.inputrecord, 5, .separator)

        .compGUIID.Keys "[Home]![End][Del]" & tablevalue & "[Tab]"
        LogMessage .TestCommand &" """& tablevalue &""" sent to "& .CompName &".", GENERIC_MESSAGE, ""
        
        'if special chars detected then do not compare input text to current value
        if (GetNextDelimiterIndex(tablevalue, 1, "~%^(+{") > 0) then
            LogMessage .CompName &" verification of new value not performed due to special characters.", GENERIC_MESSAGE, ""
            .StatusCode = SDNoScriptFailure  
            exit sub
        end if
        
        'added the unverify capability
        if (UCase(.testcommand) = "SETUNVERIFIEDTEXTVALUE") then
            LogMessage .CompName &" verification of new value not performed.", GENERIC_MESSAGE, ""
            .StatusCode = SDNoScriptFailure  
            exit sub
        end if
        
        status = GetCurrentComboBoxText(newvalue)
        if status <> 0 then
            LogMessage "ComboBox "& .TestCommand &" in "& .WindowName & _
                       " verification failed.  "& _
                       "See table "& .FileName & " at line "& _
                       .LineNumber, WARNING_MESSAGE, _
                       .WindowName &":"& .CompName &" text could not be retrieved."
            .StatusCode = SDScriptWarning  
        else
            if CompareStr(tablevalue, newvalue) <> 0 then
                LogMessage "ComboBox "& .TestCommand &" in "& .WindowName & _
                       " verification failed.  " & _
                       "See table " & .FileName & " at line " & _
                       .LineNumber, FAILED_MESSAGE, _
                       .WindowName &":"& .CompName &" Set to:"""& tablevalue & _
                       """, but returns:"""& newvalue &"""."
                .StatusCode = SDGeneralScriptFailure  
            else
                LogMessage .CompName &" "& .TestCommand & _
                           " to """& tablevalue &""" successful.", _
                           PASSED_MESSAGE, ""  
                .StatusCode = SDNoScriptFailure  
            end if
        end if
    
    End With
    
End Sub


'############################################################################
'#
'#   Sub ComboBoxSelectPartialMatch ()
'#
'#
'# DESCRIPTION:
'#
'#      Select an item by its text value from a combobox.  
'#      This method combines the initial Click required to expose the list 
'#      of items and then the subsequent selection of a text item from the list.
'#      The first item containing a match of the provided substring is selected.
'#
'#      The routine will first attempt to see if the item exists in the list 
'#      and should provide a warning if it cannot find the item or cannot 
'#      read the list of items.  The routine will then attempt the selection.
'#
'#      After the selection is attempted, the routine tries to verify that the 
'#      list has the specified item as the selected item.  A warning will be 
'#      issued if the routine cannot read the list.  A failure will be issued 
'#      if the routine CAN read the list and determines that the specified 
'#      item is NOT the currently selected item.
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      5   Field 5 should contain the case-sensitive substring to select.
'#          You can enclose this text in double-quotes to ensure proper retrieval.
'#
'# ERRORS:
'#
'#      none

'#
'# Orig Author: John Crunk
'# Orig   Date: SEP 15, 2006
'# History:
'#
'#      SEP 15, 2006    Original Release
'#
'############################################################################
Sub ComboBoxSelectPartialMatch()
    ComboBoxSelect 1
End Sub

'Drill down a comboxBox to get all the items' text 
'comObj: comboBox object
'itemArray(): output array that contains the text value of all the list items
Function GetObjectData(combObj, ByRef itemArray()) 
    Dim itemCount, index
    Dim selection, itemValue
    Dim popup, item
        
    GetObjectData = false
    On Error Resume Next
    'TODO itemCount
    itemCount = GetItemCount()
    if itemCount <= 0 then
        SAFSDebug "No items contained! itemCount=" & CStr(itemCount), DEBUG_ERROR 
        exit function
    end if
        
    if Not ComboBoxClick(combObj) then
        SAFSDebug "Fail to show the combo box's popup!", DEBUG_ERROR
        exit function         
    end if
        
    Set popup = GetComboBoxPopup(combObj)
    If Not popup.Exists Then
        SAFSDebug "Fail to get the combo box's popup!", DEBUG_ERROR
        exit function         
    end If

    Redim itemArray(itemCount)   
    for index = 0 to itemCount-1
        'TODO GetComboBoxItem(popup, index)
        Set item = GetComboBoxItemByIndex(popup, index)
        If item.Exists Then
            itemArray(index) = GetComboBoxItemValue(item)
        else
            SAFSDebug "Fail to get the combo box's item of index '"&index &"'", DEBUG_WARN         
        end If
    Next    

    If Err.Number<>0 Then
        SAFSDebug "GetObjectData: During select item '"&selection&"': Met Err="&Err.Number, DEBUG_WARN   
    End If        
     
    GetObjectData = true
End Function

Sub Test1
    Dim combo, popup, item, itemText, match, millis
    
    Set combo = Sys.Browser("iexplore").Page("http://dojotoolkit.org/documentation/tutorials/1.9/selects_using_stores/demos/ProgComboBox.php").Panel(0).Panel(0).Panel("widget_stateSelect")
    itemText = "Alaska"
    'itemText = "Washington"
    
    'Set combo = Sys.Browser("iexplore").Page("http://dojotoolkit.org/reference-guide/1.9/dijit/form/ComboBox.html").Panel("dijit_Dialog_0").Panel(1).Frame(0).Panel("widget_stateSelect")
    'itemText = "Connecticut"
    
    match = 1
    'millis = 10000
    millis = -1
    
    Log.Message "Before click " & Now
    if ComboBoxClick(combo) then
        Log.Message "End click " & Now
        Set popup = GetComboBoxPopup(combo)
        Log.Message "Get Combo at " & Now
        if popup.Exists then
            Set item = GetComboBoxItem(popup, itemText, match)
            Log.Message "Get Item at " & Now
            if item.Exists then
                Log.Message item.contentText & " has been found"
                if ClickComboBoxItem(popup, item, millis) then
                    Log.Message "Clicked Item at " & Now
                    Log.Message "Combo item '"&itemText&"' was successfully clicked."
                End if
            end if
        end if
    End if

End Sub