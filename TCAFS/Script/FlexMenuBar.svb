Option Explicit

'##############################################################################
'#
'#    FLEXMENUBAR.VBS  SCRIPT
'#
'#                                                                         
'# MODULE DESCRIPTION:
'#
'#      Routines and utilities to work on TC  
'#      Data-Driven Automation with Test Complete.  
'#
'# SUPPORTED ACTION COMMANDS:
'#
'#     SelectMenuItem               'Select a Menu item
'#     SelectMenuItemContains       'Select a Menu item, menu item can be sub-string
'#     SelectUnverifiedMenuItem     'Select a Menu item without verification
'#     VerifyMenuItem               'Verify a Menu item 
'#     VerifyMenuItemContains       'Verify a Menu item, menu item can be sub-string
'#     ResetMenuCache               'Reset the cache containing the menu tree
'#
'#
'# Orig Author: Dharmesh Patel
'# Orig   Date: SEP 21, 2011
'# History:
'#
'#      SEP 21, 2011    Original Release
'#      DEC 26, 2011    (Lei Wang)    Update to support other keywords.
'#      AUG 17, 2012    (Lei Wang)    Update to support keyword CaptureObjectDataToFile of GenericFunctions.
'#      AUG 20, 2012    (Lei Wang)    Update to fix the ObjectGroupIndex order problem.
'#      Jan 22, 2014    (JunwuMa)   Update getMenuControlsItem to support a new type of menuitem.
'#      MAR 19, 2014    (Lei Wang)    Add methods to handle menuitem containing label in xml data.
'#      MAR 20, 2014    (Lei Wang)    Modify to support regular expression in the menu path.
'#  
'##############################################################################

'# SCRIPT CONSTANTS

'# PUBLIC DEPENDENCIES


'# PRIVATE DEPENDENCIES
'USEUNIT GenericMasterFunctions_X
'USEUNIT StepDriver_X
'USEUNIT DDGUIUtilities_X
'USEUNIT StringUtilities

'USEUNIT MenuUtilities_X
'USEUNIT DDVariableStore
'USEUNIT DDGUIUtilities
'USEUNIT GenericMasterFunctions
'USEUNIT GenericObjectFunctions
'USEUNIT LogUtilities
'USEUNIT LogUtilities_X

'############################################################################
'#
'#   Sub SelectMenuItem(contains, ignoreCase, verify)
'#
'#
'# DESCRIPTION:
'#
'#      Attempts to select a particular text string menuitem.  The menuitem 
'#      should be specified in the form "Menu->Menu->MenuItem   CTRL+V" 
'#      with the full text, spaces(if any), and keyboard shortcut text (if
'#      any).  
'#
'#      Ampersands preceding underlined characters are optional.
'#      The routine first verifies that the specified menuitem exists
'#      and exits with error if it does not.
'#      If it does exist then the selection proceeds using the MenuID retrieved
'#      from the found menuitem.
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      FLD   OPTIONAL  CONTENT
'#      ---   --------  ------------------------------    
'#       5        N     Menu->MenuItem hierarchy string to identify which menuitem to select.
'#       6        Y     index1->index2 hierarchy string to identify which menuitem to select.
'#
'# INPUT PARAMETERS:
'#      contains    Boolean: If True, the 'item name' in the menu-path can be substring
'#      ignoreCase  Boolean: If True, The matching will be case-insensitive
'#      verify      Boolean: If True, we should verify if the menu-path exists before click it.             
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Dharmesh Patel
'# Orig   Date: SEP 21, 2011
'# History:
'#
'#      SEP 21, 2011    Original Release
'#      DEC 16, 2011    (Lei Wang) Put codes in separated functions
'#
'############################################################################
Sub SelectMenuItem(contains, ignoreCase, verify)

    Dim menuitem
    Dim menuObject
    Dim topWindow
    Dim indexPath
    Dim result
    On Error Resume Next
    
    with otrd
        .statuscode = SDGeneralScriptFailure

        menuitem = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if menuitem = "" then
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                         " in table " + .filename + " at line " + CStr(.linenumber), _ 
                         FAILED_MESSAGE, "Missing required MENUITEM string."
            exit sub
        end if
        
        'indexPath is optional, such as "1->2->1"
        indexPath = GetTrimmedQuotedField(.inputrecord, 6, .separator)
        
        Set menuObject = .compGUIID
        Set topWindow = getTopWindow(menuObject)
        If topWindow Is Nothing or (Not topWindow.Exists) Then
            SAFSDebug "Can't get top Page object.", DEBUG_ERROR
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                       " in table " + .filename + " at line " + _
                       CStr(.linenumber), FAILED_MESSAGE, "Can't get top Page object."
            Exit Sub        
        End If
        
        'If verify is True, menuitem may be modified in Sub clickMenuItem(). It will contain the full-name-path.
        result = clickMenuItem(topWindow, menuObject, menuitem, contains, ignoreCase, indexPath, verify, MUHierarchySeparator)
                     
        If result <> 0 Then
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                       "  See table " & .filename & " at line " & _
                       .linenumber, FAILED_MESSAGE, _
                       " Error=" & CStr(result)
            Exit Sub        
        End If

        LogMessage .windowname +":"+ .compname + " "+.testcommand +" succeed.",PASSED_MESSAGE, _
                    "MenuPath: " & " '" & menuitem & "'."
                    
        .statuscode = SDNoScriptFailure
      
    End With     
End Sub 

'############################################################################
'#
'#   Sub VerifyMenuItem(contains, ignoreCase)
'#
'#
'# DESCRIPTION:
'#
'#      Attempts to verify a particular text string menuitem.  The menuitem 
'#      should be specified in the form "Menu->Menu->MenuItem" 
'#      with the full text or patial text, spaces(if any),
'#
'#      The routine expects that the given object already has Context or Focus.
'#      It also expects that Global StepDriverTestInfo contains all the information 
'#      it needs to perform its function.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      FLD     OPTIONAL    CONTENT
'#      ---     --------    ------------------------------    
'#       5          N       Menu->MenuItem hierarchy string to identify which menuitem to verify.
'#       6          Y       Expected Status of menuitem, "Enabled" "Disabled" "Menu With N MenuItems" are supported now
'#                          other status can be Ungrayed" "Grayed" "Checked" "Unchecked"
'#       7          Y       index1->index2 hierarchy string to identify which menuitem to verify.
'#
'# INPUT PARAMETERS:
'#      contains    Boolean: If True, the 'item name' in the menu-path can be substring
'#      ignoreCase  Boolean: If True, The matching will be case-insensitive           
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 26, 2011
'# History:
'#
'#      DEC 26, 2011    Original Release
'#
'############################################################################
Sub VerifyMenuItem(contains, ignoreCase)

    Dim menuPath, menuArray, menuArrayLength, node
    Dim menustatus
    Dim indexPath, indexArray
    Dim result
    Dim separator, count
    On Error Resume Next
    
    with otrd
        .statuscode = SDGeneralScriptFailure
        separator = MUHierarchySeparator
        
        menuPath = GetTrimmedQuotedField(.inputrecord, 5, .separator)
        if menuPath = "" then 
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                       " in table " + .filename + " at line " + _
                       CStr(.linenumber), FAILED_MESSAGE, _
                       "Missing required MENUITEM string."                       
            exit sub
        end if
        menuArray = Split(menuPath,separator)
        menuArrayLength = UBound(menuArray)
        
        'menustatus is optional, such as "Enabled Menu With 3 MenuItems"
        menustatus = GetTrimmedQuotedField(.inputrecord, 6, .separator)
                        
        'indexPath is optional, such as "1->2->1"
        indexPath = GetTrimmedQuotedField(.inputrecord, 7, .separator)
        
        'Treate the indexPath, and initialize the indexArray
        If indexPath <> "" Then
            indexArray = Split(indexPath,separator)
            If UBound(indexArray) <> menuArrayLength Then
                SAFSDebug "The index path should have the same level as menu path. menuItems=" &menuPath _
                          & " ; indexPath="&indexPath, DEBUG_ERROR
                LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _ 
                       "  See table " & .filename & " at line " & _
                       .linenumber, FAILED_MESSAGE, _
                       "The index path should have the same level as menu path."                         
                Exit Sub          
            End If
            For count = 0 To menuArrayLength
                indexArray(count) = CInt(indexArray(count))
            Next
        Else
            ReDim indexArray(menuArrayLength)
            For count = 0 To menuArrayLength
                indexArray(count) = 1
            Next
        End If        
        
        Set node = Nothing
        Set node = getFullNameMenuPathNode(MenuTreeCache, menuArray, contains, ignoreCase, indexArray)
        
        If node Is Nothing Then
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                       "  See table " & .filename & " at line " & _
                       .linenumber, FAILED_MESSAGE, _
                       "MenuPath '" & menuPath & "' was not found in " & .compname &"."
            Exit Sub
        Else
            menuPath = getFullNamePath(node, separator)        
        End If
                     
        If Not verifyMenuStatus(node, menustatus)  Then
            LogMessage .windowname +":"+ .compname + " "+.testcommand +" failed." + _
                       "  See table " & .filename & " at line " & _
                       .linenumber, FAILED_MESSAGE, _
                       "MenuItem's status is not '" & menustatus & "'."
            Exit Sub        
        End If

        LogMessage .windowname +":"+ .compname + " "+.testcommand +" succeed.",PASSED_MESSAGE, _
                    "MenuPath: '"+menuPath+"'; Status: '"+menustatus+"'"
        .statuscode = SDNoScriptFailure
      
    End With     
End Sub

'############################################################################
'#
'#   Sub ResetMenuCache()
'#
'#
'# DESCRIPTION:
'#
'#      MenuTreeCache is a FlexMenuInfo object, it is a tree structure. 
'#      It is representing the tree of the whole menu contents.
'#      It is used for verification of menu path.
'#      This procedure tries to reset this global variable.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      FLD     OPTIONAL    CONTENT
'#      ---     --------    ------------------------------ 
'#
'# INPUT PARAMETERS:         
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 27, 2011
'# History:
'#
'#      DEC 27, 2011    Original Release
'#
'############################################################################
Sub ResetMenuCache()
    
    with otrd
        .statuscode = SDGeneralScriptFailure
                     
        If loadMenuCache(True, .compGUIID) Then
            .statuscode = SDNoScriptFailure
            LogMessage .testcommand & " for "& .compname &" succeed.",PASSED_MESSAGE, ""
        Else
            LogMessage .testcommand & " for "& .compname &" failed." & _
                       "  See table " & .filename & " at line " & _
                       .linenumber, FAILED_MESSAGE, ""                    
        End If

    End With     
End Sub

'############################################################################
'#
'#   Function loadMenuCache(reset, menuObject)
'#
'# DESCRIPTION:
'#
'#     Reset the global variable MenuTreeCache.
'#     MenuTreeCache is a FlexMenuInfo object, it is a tree structure. It is
'#     representing the tree of the whole menu contents.
'#      
'# INPUT PARAMETERS:
'#
'#      reset    Boolean, if True then force to reset MenuTreeCache.
'#                        if False, only reset MenuTreeCache if it doesn't exist.
'#      menuObject  Flex MenuControl object or Flex MenuBar object
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 20, 2011
'# History:
'#
'#      DEC 20, 2011    Original Release
'#
'############################################################################
Function loadMenuCache(reset, menuObject)
    Dim fullname
    
    On Error Resume Next
    loadMenuCache = False
    fullname = menuObject.FullName
    
    'Set the menu tree cache if it doesn't exist 
    If Not reset Then
        If (MenuTreeCache Is Nothing) Then
            reset = True
        ElseIf (MenuTreeCache.fullname <> fullname) Then
            reset = True
        End If
    End If

    'If reset OR (MenuTreeCache Is Nothing) OR (MenuTreeCache.fullname <> fullname) Then
    If reset Then
        Dim topwin
        Set topwin = getTopWindow(menuObject)
        Set MenuTreeCache = InitFlexMenuInfo()
        MenuTreeCache.fullname = fullname
'        If Not getMenuHierachySimply(MenuTreeCache, menuObject) Then
'            Set MenuTreeCache = InitFlexMenuInfo()
'            MenuTreeCache.fullname = fullname        
'            Call getMenuHierachy(MenuTreeCache, topwin, menuObject)
'        End If
        Call getMenuHierachy(MenuTreeCache, topwin, menuObject)        
    End If
    
    If Err.Number = 0 Then
        loadMenuCache = True
    Else
        SAFSDebug "Can't reset menu cache. Error=" & CStr(Err.Number), DEBUG_WARN
    End If
End Function

'############################################################################
'#
'#   Function clickMenuItem(topWindow, menu, menuItems, contains, ignoreCase, indexPath, verify, separator)
'#
'# DESCRIPTION:
'#
'#     Click at a menu item indicated by parameter menuItems 
'#      
'# INPUT PARAMETERS:
'#
'#      topWindow    In     The Flex object, from where we begin to search the 'MenuControl' object
'#      menu         In     Flex MenuControl object or MenuBar object 
'#      menuItems    In-Out A String separated by "->", which indicates the menu-path to click
'#                          If verify is True, menuItems may be changed and contain the full-name menu-path.
'#      contains     In     Boolean: If true, the 'item name' in the menu-path can be substring
'#      ignoreCase   In     Boolean: If True, The matching will be case-insensitive
'#      indexPath    In     String:  The index of the matched items we want, separated by separator. It is 1-based.
'#                                   It should have the same level as menuPath, such as "1->2"
'#                                   This is used when there are 'menu items' having the same label
'#                                   in the same level, we use index to tell which one we want.
'#                                   For example:
'#                                   The tree is like:
'#                                   File    Tools
'#                                     |       |
'#                                     -Exit   - Edit
'#                                             - Cut
'#                                             - Edit
'#                                   We have 'Tools->Edit' as menu-path and '1->2' as indexPath, 
'#                                   we will get the first 'Tools' in the first level of the menu tree,
'#                                   under the 'Tools' node, we will try to get the second 'Edit'.
'#                                   
'#      verify       In     Boolean: If true, we should verify if the menu-path exists before click it.
'#      separator    In     String: It is used to separate 'menu path' and 'index path'              
'#
'# RETURNS:
'#  
'#      0   If the menu item has been clicked successfully.
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 16, 2011
'# History:
'#
'#      DEC 16, 2011    Original Release
'#      MAY 10, 2012    (Lei Wang) Use StringContains instead of  StringEqual to compare the menu.ObjectType 
'#                               with "MenuBar", as some menus' type is not standard, such as "ViwerMenuBar"
'#
'############################################################################
Function clickMenuItem(topWindow, menu, menuItems, contains, ignoreCase, indexPath, verify, separator)  
    'Array for find MenuControl object 
    Dim menuProps, menuValues
    'mArray contains the 'menu item' of each level
    'indexArray contains the index of 'item' that we want, it is 1-based.
    Dim mArray, indexArray
    Dim itemText, index, menuArrayLength
    Dim menuControl, previousMenuControl
    Dim count
    Dim result
    Dim delayTime
    
    On Error Resume Next
    clickMenuItem = 1
    
    delayTime = 100
    'Initialize the property array for find 'MenuControl' object
    menuProps = Array("ObjectType","ObjectGroupIndex")
    menuValues = Array("MenuControl","0")
    
    'Split the 'menu items' to an array: mArray
    mArray = Split(menuItems,separator) 
    menuArrayLength = UBound(mArray)
    
    'Treate the indexPath, and initialize the indexArray
    If indexPath <> "" Then
        indexArray = Split(indexPath,separator)
        If UBound(indexArray) <> menuArrayLength Then
            SAFSDebug "The index path should have the same leve as menu level. menuItems=" &menuItems _
                      & " ; indexPath="&indexPath, DEBUG_ERROR
            clickMenuItem = 9
            Exit Function          
        End If
        For count = 0 To menuArrayLength
            indexArray(count) = CInt(indexArray(count))
        Next
    Else
        ReDim indexArray(menuArrayLength)
        For count = 0 To menuArrayLength
            indexArray(count) = 1
        Next
    End If
    
    'Do the verification
    If verify Then
        Dim node
        'mArray and indexArray may be changed!!!
        Set node = getFullNameMenuPathNode(MenuTreeCache, mArray, contains, ignoreCase, indexArray)        
        If node Is Nothing Then
            SAFSDebug "Verification failed for menu-path '" &menuItems& "'", DEBUG_ERROR
            clickMenuItem = 1
            Exit Function
        Else
            menuItems = getFullNamePath(node, separator)
        End If
    Else
        'If verification is not needed, we suppose that user has provided the 'full name path'
        'parameter contains, ignoreCase will not be useful
    End If
      
    If UBound(mArray) >= 0 Then
        'Treat the MenuBar and find the MenuControl object          
        If StringContains(menu.ObjectType, "MenuBar") Then
            Dim menubarItem
            itemText = mArray(0)
            'convert index from 1-based to 0-based
            index = indexArray(0) - 1
            Set menubarItem = getMenuBarsItem(menu, itemText, index)
            
            If (menubarItem Is Nothing) or (Not menubarItem.Exists) Then
                SAFSDebug "Can't get menubarItem '"&menuText&"'.", DEBUG_ERROR
                clickMenuItem = 2
                Exit Function
            End If
        
            'HoverMouse on menubarItem to show the MenuControl
            menubarItem.HoverMouse

            'Get the MenuControl object
            Delay delayTime
            Set menuControl = topWindow.FindChild(menuProps,menuValues,4)
            
            If  Not menuControl.Exists Then
                'If we can't find a MenuControl object, we can click at the MenuBarItem to show it.
                'After this click, the MenuControl should popup when we hover mouse on any menu item
                'Be careful!!! Click may trigger some events of the flex application
                menubarItem.Click
                Delay delayTime
                Set menuControl = topWindow.FindChild(menuProps,menuValues,4)
                If  Not menuControl.Exists Then
                    SAFSDebug "MenuControl for " & menuText & " NOT found ", DEBUG_ERROR
                    clickMenuItem = 3
                    Exit Function
                End If                                
            End If
            
            'Skip the first item of mArray, it is a menuBarItem
            'Skip the first item of indexArray, it is the index for the first item in mArray
            For count = 0 to menuArrayLength-1
                mArray(count) = mArray(count+1)
                indexArray(count) = indexArray(count+1)
            Next
            ReDim Preserve mArray(menuArrayLength-1)
            ReDim Preserve indexArray(menuArrayLength-1)            
        Else
            SAFSDebug "We consider object '"& menu.ObjectType &"' as MenuControl.", DEBUG_DEBUG
            Set menuControl = menu
        End If
        
        If Not StringContains(menuControl.ObjectType, "MenuControl") Then
            SAFSDebug "Can't handle object '"& menuControl.ObjectType &"'.", DEBUG_ERROR
            clickMenuItem = 4
            Exit Function            
        End If

        result = Log.ErrCount
        
        Dim item
        For count = 0 to Ubound(mArray)
            'Wait for MenuControl to appear
            Delay delayTime
            itemText = mArray(count)
            'convert index from 1-based to 0-based
            index = indexArray(count) - 1         
            
            'Get menu item according to the itemText
            Set item = getMenuControlsItem(menuControl, itemText, index) 
             
            If (item Is Nothing) or (Not item.Exists) Then
                SAFSDebug "MenuItemRenderer Or ListItem for " & menuText & " NOT found ", DEBUG_ERROR
                clickMenuItem = 6
                Exit Function    
            End If
            
            SAFSDebug "MenuItemRenderer Or ListItem for " & menuText & " is found and clicked. ", DEBUG_INFO                
            item.Click
            'If all menu items are clicked, we just exit the for loop
            If count=Ubound(mArray) Then Exit For
            
            'Try to get the MenuControl of next level
            'Sometimes ObjectGroupIndex increment for child MenuControl,
            'Sometimes ObjectGroupIndex is NOT in that order, the new appeared MenuControl always
            'has 0 as the value for property ObjectGroupIndex.
            'How can we know which index to use?
            'Try the incremented index firstly so that we can know the order.

            Set previousMenuControl = menuControl
            'Increment the index of previous MenuControl
            menuValues(1) = previousMenuControl.ObjectGroupIndex + 1                        
            'If the order of ObjectGroupIndex is inverse (not incremental), ObjectGroupIndex of previous
            'MenuControl is always 0, we will find MenuControl with index=1. As we click the menu 
            'item to show the MenuControl of next level, so the previous MenuControl's index will change
            'dynamically from 0 to 1, we should get the same MenuControl as previous one. 
            'If the order of ObjectGroupIndex is incremental, we will always to find the MenuControl with
            'a different index, we should get a different MenuControl.

            Sys.Refresh 
            Set menuControl = topWindow.FindChild(menuProps,menuValues,4) 

            'If we can get MenuControl but it is the same MenuControl object as previous one, we know
            'the order of ObjectGroupIndex is inverse (not incremental), we will try the 0 index and find again.
            If menuControl.Exists And _
               StringEqual(menuControl.FlexObject.uid, previousMenuControl.FlexObject.uid) Then
                'ONLY the order of ObjectGroupIndex is inverse (not incremental), program will come here!!!
                SAFSDebug "Try to find MenuControl by ObjectGroupIndex '0'", DEBUG_DEBUG
                menuValues(1) = 0
                Set menuControl = topWindow.FindChild(menuProps,menuValues,4) 
            End If
                                                            
            If  Not menuControl.Exists Then
                SAFSDebug "MenuControl for " & menuText & " NOT found ", DEBUG_ERROR
                clickMenuItem = 5
                Exit Function
            End If
        Next
        
        If result = Log.ErrCount Then
            clickMenuItem = 0
        Else
            SAFSDebug "Some errors occured. Error=" & CStr(Err.Number), DEBUG_ERROR
            clickMenuItem = 7
        End If
    Else
        SAFSDebug "There are no menu item to click.", DEBUG_ERROR
        clickMenuItem = 8
    End If
   
End Function

'Get an item form MenuBar object according to 'text' and 'index'
'index is 0-based
Function getMenuBarsItem(menuBarOrControl, itemText, index)
    'Item in MenuBar is 'MenuBarItem'
    Set getMenuBarsItem = getItemByText(menuBarOrControl, "MenuBarItem", itemText, index)
End Function

'Get an item form MenuControl object according to 'text' and 'index'
'index is 0-based
Function getMenuControlsItem(menuBarOrControl, itemText, index)
    'Item in MenuControl is 'MenuItemRenderer'
    Dim menuItem

    'Set getMenuControlsItem = getItemByText(menuBarOrControl, "MenuItemRenderer", itemText, index)
    Set menuItem = getItemByText(menuBarOrControl, "MenuItemRenderer", itemText, index)
    If (menuItem Is Nothing) Then
        'try with another possibility that the menu item is "ListItem"
        Set menuItem = getItemByText(menuBarOrControl, "ListItem", itemText, index)
    End If
    
    Set getMenuControlsItem = menuItem
End Function

'############################################################################
'#
'#   Function getItemByText(menuBarOrControl, itemType, itemText, index)
'#
'# DESCRIPTION:
'#
'#     Get an item from MenuBar or MenuControl object.
'#     itemType, itemText, index are searching conditions.
'#     This function will try to serval properties to match 'menu-item-text'.
'#     The properties are "Caption", "ObjectLabel" and "ObjectIdentifier"
'#      
'# INPUT PARAMETERS:
'#
'#      menuBarOrControl    The Flex MenuBar or MenuControl object
'#      itemType            String: the item's type. It can be "MenuBarItem" or "MenuItemRenderer";  
'#      itemText            String: the menuBarOrControl's text
'#      index               Integer: Normally it is 0. If there are multiple item with same text within a 
'#                          MenuBar or MenuControl, this index indicate which one is wanted. It is 0-based.            
'#
'# RETURNS:
'#  
'#      An item from MenuBar or MenuControl object if it is found. Nothing if not found.
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 23, 2011
'# History:
'#
'#      DEC 23, 2011    Original Release
'#
'############################################################################
Function getItemByText(menuBarOrControl, itemType, itemText, index)
    Dim itemProps, itemValues, item
    On Error Resume Next 
    'Initialize the property array for find object
    itemProps = Array("ObjectType","Caption")
    itemValues = Array("","")

    SAFSDebug "Item Type='"&itemType&"', Item Text='"&itemText&"', index=" &CStr(index), DEBUG_INFO
    itemValues(0) = itemType
    itemValues(1) = itemText
    
    Set getItemByText = Nothing
    Set item = getMenuItem(menuBarOrControl, itemProps, itemValues, index)

    If (item Is Nothing) or (Not item.Exists) Then
        itemProps(1) = "ObjectLabel"
        Set item = getMenuItem(menuBarOrControl, itemProps, itemValues, index)
        If (item Is Nothing) or (Not item.Exists) Then
            itemProps(1) = "ObjectIdentifier"
            Set item = getMenuItem(menuBarOrControl, itemProps, itemValues, index)
            If (item Is Nothing) or (Not item.Exists) Then
                itemProps(1) = "FlexObject.listData.label"
                Set item = getMenuItem(menuBarOrControl, itemProps, itemValues, index)    
            End If
        End If         
    End If 
    
    If (item Is Nothing) or (Not item.Exists) Then
        Set item = getMenuItem2(menuBarOrControl, itemType, itemText, index)    
    End If

    If (item Is Nothing) or (Not item.Exists) Then
        SAFSDebug itemType & " for " & itemText & " NOT found ", DEBUG_ERROR 
        Set item = Nothing
    End If
    
    Set getItemByText = item        
End Function

'############################################################################
'# DESCRIPTION:
'#     Get an item from MenuBar or MenuControl object.
'#      
'# INPUT PARAMETERS:
'#      menuBarOrControl    The Flex MenuBar or MenuControl object
'#      itemProps           An array containing 2 'property names' of menuBarOrControl, the first is 'ObjectType'
'#                          and the second is the 'property name' represnting the menuBarOrControl's text, it
'#                          can be serval values, such as "Caption", "ObjectLabel" or "ObjectIdentifier"  
'#      itemValues          An array containing 2 'property values' of menuBarOrControl, 
'#                          The first is the valeu of 'ObjectType', it can be "MenuBarItem" or "MenuItemRenderer";
'#                          The second is the menuBarOrControl's text
'#      index               Integer: Normally it is 0. If there are multiple item with same text within a 
'#                          MenuBar or MenuControl, this index indicate which one is wanted. It is 0-based.            
'#
'# RETURNS:
'#      An item from MenuBar or MenuControl object if it is found.
'#  
'# ERRORS:
'#      none
'# History:
'#      DEC 23, 2011    (Lei Wang) Original Release
'#
'############################################################################
Function getMenuItem(menuBarOrControl, itemProps, itemValues, index)
    Dim itemArray, itemType, itemText, textProperty
    
    On Error Resume Next
    Set getMenuItem = Nothing
    textProperty = itemProps(1)
    itemType = itemValues(0)
    itemText = itemValues(1) 

    SAFSDebug "Try text property '"&textProperty&"'", DEBUG_INFO

    itemArray = menuBarOrControl.FindAllChildren(itemProps, itemValues) 
    'SAFSDebug " index= " & index & " UBound(itemArray)="&UBound(itemArray), DEBUG_INFO

    If index <= UBound(itemArray) Then
        'It seems that itemArray contains itme in inverse order
        Set getMenuItem = itemArray(UBound(itemArray)-index)
        If (Not getMenuItem Is Nothing) And getMenuItem.Exists Then
            SAFSDebug itemType & " for " & itemText & " is found ", DEBUG_INFO            
        Else
            SAFSDebug itemType & " for " & itemText & " NOT found ", DEBUG_WARN         
        End If
    Else
        SAFSDebug "Not find enough '"&itemType&"', index '"&CStr(index)&"' is too big.", DEBUG_WARN         
    End If
    
End Function

'############################################################################
'# DESCRIPTION:
'#     Get an item from MenuBar or MenuControl object.
'#      
'# INPUT PARAMETERS:
'#
'#      menuBarOrControl    The Flex MenuBar or MenuControl object
'#      itemType            The value of item's 'ObjectType', it can be "MenuBarItem" or "MenuItemRenderer" 
'#      itemText            The value of item's text shown on application, its label.
'#      index               Integer: Normally it is 0. If there are multiple item with same text within a 
'#                          MenuBar or MenuControl, this index indicate which one is wanted. It is 0-based.            
'#
'# RETURNS:
'#      An item from MenuBar or MenuControl object if it is found.
'#  
'# ERRORS:
'#      none
'#
'# History:
'#      MAR 19, 2014    (Lei Wang) Original Release
'#
'############################################################################
Function getMenuItem2(menuBarOrControl, itemType, itemText, index)
    Dim itemArray, i, item, itemLabel, count
    Dim values()
    
    On Error Resume Next
    Set getMenuItem2 = Nothing

    SAFSDebug "Try to get '"&itemType&"' whose text is '"&itemText&"'. Get all '"&itemType&"' objects and select one.", DEBUG_INFO

    itemArray = menuBarOrControl.FindAllChildren(Array("ObjectType"), Array(itemType)) 
    'SAFSDebug " index= " & index & " UBound(itemArray)="&UBound(itemArray), DEBUG_INFO
    
    count = 0
    If index <= UBound(itemArray) Then
        'It seems that itemArray contains itme in inverse order
        For i=UBound(itemArray) to LBound(itemArray) Step -1
            Set item = itemArray(i)
            itemLabel = DDGUIUtilities.DDGGetTextValue(item)
            'SAFSDebug " got itemLabel=" & itemLabel, DEBUG_INFO
'            If StringUtilities.StringEqual(itemLabel, itemText) Then
            If StringUtilities.StringMatchWildCast(itemLabel, itemText, True) Or _
               StringUtilities.StringContainsRegex(itemLabel, itemText) Then
                If count=index Then
                    Set getMenuItem2 = item
                    Exit For
                Else
                    count = count+1
                End If
            Else
                'If DDGUIUtilities.DDGGetTextValue(item) cannot provide the correct text, un-comment following codes
                'But this will waste time, if DDGUIUtilities.DDGGetTextValue(item) give the correct text!!!
'                Call DDGUIUtilities.DDGGetTextValues(item, values)'Get all possible text value
'                For Each itemLabel In values
'                    If StringUtilities.StringMatchWildCast(itemLabel, itemText, True) Or _
'                       StringUtilities.StringContainsRegex(itemLabel, itemText) Then
'                        If count=index Then
'                            Set getMenuItem2 = item
'                            Exit Function
'                        Else
'                            count = count+1
'                        End If
'                    End If            
'                Next
            End If
        Next

    Else
        SAFSDebug "Not find enough '"&itemType&"', index '"&CStr(index)&"' is too big.", DEBUG_WARN         
    End If

End Function

'############################################################################
'#
'#   Function getFullNameMenuPathNode(menuTree, menuPath, contains, ignoreCase, indexPath, separator)
'#
'# DESCRIPTION:
'#
'#  Verify if the given 'menu path' exists in the menu tree.
'#  If not found, return Nothing; If found, return the matched menu item node. 
'#      
'# INPUT PARAMETERS:
'#
'#      menuTree        In: FlexMenuInfo object, defined in MenuUtilities_X
'#      itemArray       In-Out: Array of String:  Contain the item of 'menu path', such as {'File','Exit'}
'#                              If this array contains sub-name of menu item, it will be replaced by full-name.
'#      contains        In: Boolean: If True, The matching will be sub-string match.
'#      ignoreCase      In: Boolean: If True, The matching will be case-insensitive
'#      indexArray      In-Out: Array of Integer:  An arraro of index of the matched items we want. It is 1-based.
'#                                                 It should have the same level as itemArray.
'#                                   This is used when there are 'menu items' having the same label
'#                                   in the same level, we use index to tell which one we want.
'#                                   For example:
'#                                   The tree is like:
'#                                   File    Tools
'#                                     |       |
'#                                     -Exit   - Edit
'#                                             - Cut
'#                                             - Edit
'#                                   We have {'Tools','Edit'} as menu-array and {'1','2'} as index array, 
'#                                   we will get the first 'Tools' in the first level of the menu tree,
'#                                   under the 'Tools' node, we will try to get the second 'Edit'.
'#                                   If this item array contains sub-name of menu item, the index of that item
'#                                   will be recaculated and replace that inde indexArray.
'#
'# RETURNS:
'#      
'#      Nothing or 'matched menu item node'
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 21, 2011
'# History:
'#
'#      DEC 21, 2011    Original Release
'#
'############################################################################
Function getFullNameMenuPathNode(menuTree, itemArray, contains, ignoreCase, indexArray)
    Dim pathItem
    Dim index, findTime, recaculatedIndex
    Dim parentNode, child
    Dim i, j, level, totalLevel
    Dim ignoredItemArray
    
    On Error Resume Next
    level = 0
    totalLevel = UBound(itemArray)
    'menuTree is a forest, its child corresponds to the first level item in menu path  
    Set parentNode = menuTree
    Set getFullNameMenuPathNode = Nothing
    
    If totalLevel < 0 Then
        SAFSDebug "There are no items in the menu array. Error!", DEBUG_ERROR
        Exit Function    
    End If
    
    If UBound(indexArray) <> totalLevel Then
        SAFSDebug "The indexArray should have the same length as menuArray.", DEBUG_ERROR
        Exit Function          
    End If
 
    Do While True
        pathItem = itemArray(level)
        index = indexArray(level)
        recaculatedIndex = 0
        ReDim ignoredItemArray(index-1)
        findTime = 0
            
        'If parentNode has no children, we can't continue to match menu path
        If parentNode.childCount <= 0 Then
            SAFSDebug "Can't find the matched full menu path. No child in tree to match '" & pathItem & "'.", DEBUG_ERROR
            Exit Do        
        End If
        
        'Try to match menu item of certain level
        For i = 0 To (parentNode.childCount -1)
            Set child = parentNode.children(i)
            If matchNodeText(child, pathItem, contains, ignoreCase) Then
                'Put the matched full-name into the array ignoredItemArray
                ignoredItemArray(findTime) = child.text
                findTime = findTime + 1
                If findTime = index Then
                    'itemArray may contain the 'patial text' or wildcast
                    'replace the text in the itemArray with the real-full-name of menu item
                    itemArray(level) = child.text
                    'recaculate the index of the real-full-name
                    'After repalce the text in array itemArray, we need to modify the index
                    'array also to reflect the real index of 'real-full-name'.
                    For j = 0 To (index-1)
                        If StringEqual(ignoredItemArray(j),child.text) Then
                            recaculatedIndex = recaculatedIndex + 1
                        End If
                    Next
                    indexArray(level) = recaculatedIndex
                    
                    'We matched menu item of this level, we increment the level
                    'and set the child to parentNode for mtaching the next level
                    level = level + 1
                    Set parentNode = child
                    Exit For
                End If
            Else
                'If the last child can't match the 'path item', no hope, exit.
                If i = (parentNode.childCount -1) Then
                    SAFSDebug "Can't find the matched full menu path. No matched child for '" & pathItem & "'.", DEBUG_ERROR
                    Exit Do                      
                End If
            End If
        Next

        'If the level is bigger than totalLevel, all items in menu-path are matched, OK.
        If level > totalLevel Then
            SAFSDebug "Find the matched full menu path.", DEBUG_INFO
            Set getFullNameMenuPathNode = parentNode
            Exit Do
        End If

    Loop
    
End Function

'############################################################################
'#
'#   Function getFullNamePath(menuTreeNode, separator)
'#
'# DESCRIPTION:
'#
'#  Get the full name path of the 'menu tree node' 
'#      
'# INPUT PARAMETERS:
'#
'#      menuTreeNode        In: FlexMenuInfo object, defined in MenuUtilities_X
'#      separator           In: String: It is used to separate 'menu path'
'#
'# RETURNS:
'#      
'#      The full name path of a 'menu tree node'
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 26, 2011
'# History:
'#
'#      DEC 26, 2011    Original Release
'#
'############################################################################
Function getFullNamePath(menuTreeNode, separator)
    Dim parent, parentPath
    Set parent = menuTreeNode.parent
    
    On Error Resume Next
    'If menuTreeNode's parent equals menuTreeNode, which means that
    'menuTreeNode is the head of the menu tree. It doesn't correspond to
    'a menuitem itself, its children correspond to the first level of the
    'menu tree.
    If (parent Is Nothing) Or (menuTreeNode Is parent) Then
        getFullNamePath = ""
    Else
        parentPath = getFullNamePath(parent, separator)
        If parentPath <> "" Then
            getFullNamePath = parentPath & separator & menuTreeNode.text
        Else
            getFullNamePath = menuTreeNode.text
        End If
    End If
    
End Function


'############################################################################
'#
'#   Function verifyMenuStatus(node, menustatus) 
'#
'# DESCRIPTION:
'#
'#  Verify if its status matches the given parameter 'menu status' 
'#      
'# INPUT PARAMETERS:
'#
'#      node            In: FlexMenuInfo object, defined in MenuUtilities_X
'#      menustatus      In: String:  Sepcify the menu-item's status to be verified.
'#
'# RETURNS:
'#      
'#      True, if the verification pass.
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 26, 2011
'# History:
'#
'#      DEC 26, 2011    Original Release
'#
'############################################################################
Function verifyMenuStatus(node, menustatus)
    Dim statusArray, status
    Dim enabled, checked, childCount
    Dim i
    
    On Error Resume Next
    verifyMenuStatus = False
    enabled = False
    checked = False
    childCount = 0
    statusArray = Split(menustatus," ")

    If UBound(statusArray) < 0 Then
        SAFSDebug "There are no status to check.", DEBUG_INFO
        verifyMenuStatus = True
    Else
        For i = 0 To UBound(statusArray)
            status = statusArray(i)
            '"Enabled" "Disabled" "Ungrayed" "Grayed" "Checked" "Unchecked" "Menu With N MenuItems"
            Select Case UCase(status)
                Case "ENABLED"      enabled = True
                Case "DISABLED"     enabled = False
                Case "GRAYED"       enabled = False
                Case "UNGRAYED"     enabled = True
                Case "CHECKED"      checked = True
                Case "UNCHECKED"    checked = False
                Case "MENU"
                    'the next 3 strings should be "With" "N" "MenuItems"
                    If (i+3) <= UBound(statusArray) Then
                        childCount = CInt(statusArray(i+2))
                        i = i + 3
                    Else
                        SAFSDebug " The given status' format is error.", DEBUG_WARN     
                    End If
                Case Else
                    SAFSDebug "'" &status& "' is not supported yet.", DEBUG_WARN    
            End Select            
        Next
        
        verifyMenuStatus = (node.enabled = enabled)
        verifyMenuStatus = verifyMenuStatus And (node.checked = checked)
        verifyMenuStatus = verifyMenuStatus And (node.childCount = childCount)
    End If 
    
End Function

'############################################################################
'#
'#   Function matchNodeText(node, pathItem, contains, ignoreCase)
'#
'# DESCRIPTION:
'#
'#     Test if the path-item matches node's text.
'#     The node can contain mulptiple texts, store in its array menuTexts.
'#     We try to match one of them, if matched, we will set the property 'text'
'#     of node to the matched text and return True.
'#      
'# INPUT PARAMETERS:
'#
'#      node            In-Out: FlexMenuInfo object, defined in MenuUtilities_X
'#      pathItem        In:     String:  The item to be matched with the node's text, can be regex.
'#      contains        In:     Boolean: If True, test if pathItem is sub-string of node's text
'#      ignoreCase      In:     Boolean: If True, The matching will be case-insensitive 
'#
'# RETURNS:
'#      
'#      True, if pathItem can match the node's text
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 21, 2011
'# History:
'#
'#      DEC 21, 2011    Original Release
'#      MAY 10, 2012    (Lei Wang) Add regex support.
'#
'############################################################################
Function matchNodeText(node, pathItem, contains, ignoreCase)
    Dim j, text
    
    matchNodeText = False
    For j = 0 To Ubound(node.menuTexts)
        text = node.menuTexts(j)
        SAFSDebug "Try to match '"&pathItem&"' and '"&text&"'", DEBUG_DEBUG
        
        If StringMatch(text,pathItem,ignoreCase,contains) Then
            matchNodeText = True
        Else
            Dim ExprStr, Str            
            'Try to match Regex
            If ignoreCase Then
                ExprStr = aqString.ToLower(pathItem)
                Str = aqString.ToLower(text)
            Else
                ExprStr = pathItem
                Str = text            
            End If
            If aqString.StrMatches(ExprStr, Str) Then
                matchNodeText = True                  
            End If                                    
        End If
        
        If matchNodeText Then
            node.text = text
            Exit For
        End If
    Next
     
End Function

'############################################################################
'#
'#   Sub getMenuHierachySimply(menuTree, menu) 
'#
'# DESCRIPTION:
'#
'#     Get a menu tree which will hold information (ONLY the text) of each node of menu
'#     If we need more information of menu tree, we should call getMenuHierachy(menuTree, topWindow, menu)
'#      
'# INPUT PARAMETERS:
'#
'#      menuTree    Out:    FlexMenuInfo object, it is a tree structure
'#      menu        In:     A Flex MenuControl or MenuBar object          
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: AUG 17, 2012
'# History:
'#
'#      AUG 17, 2012    Original Release
'#
'############################################################################
Function getMenuHierachySimply(menuTree, menu)
    Dim data
    getMenuHierachySimply = False
    
    On Error Resume Next
    Set data = Nothing
    If aqObject.IsSupported(menu.FlexObject, "dataProvider") Then
        Set data = menu.FlexObject.dataProvider
    End If
    
    If data Is Nothing Or Not IsObject(data) Then
        SAFSDebug "Can't get the data provider object!", DEBUG_ERROR
    Else
        Call getMenuHierachyRecursive(menuTree, data)
        getMenuHierachySimply = True
    End If
    
End Function

'############################################################################
'#
'#   Sub getMenuHierachyRecursive(menuTree, data)
'#
'# DESCRIPTION:
'#
'#     Get a menu tree which will hold information of each node of menu
'#      
'# INPUT PARAMETERS:
'#
'#      menuTree    Out:    FlexMenuInfo object, it is a tree structure
'#      data        In:     A Flex dataProvider object          
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: AUG 17, 2012
'# History:
'#
'#      AUG 17, 2012    Original Release
'#
'############################################################################
Function getMenuHierachyRecursive(menuTree, data)
    Dim i
    Dim child
    'children contain a set of FlexMenuInfo object
    'node is FlexMenuInfo object, a new node in the menuTree
    'texts contain the possible text for this node
    Dim children(), texts(), node
    On Error Resume Next
    
    If data Is Nothing Or Not IsObject(data) Then
        SAFSDebug "The data provider object should not be null!!!", DEBUG_ERROR
        Exit Function
    End If
    
    With menuTree
        .childCount = data.length
        If .childCount > 0 Then
            ReDim children(.childCount-1)
            For i=0 To (.childCount-1)
                Set child = data.item(i)
                Set node = InitFlexMenuInfo()                
                Set node.parent = menuTree
                
                If child Is Nothing Or Not IsObject(child) Then
                    SAFSDebug "Can't get the item object.", DEBUG_WARN
                Else
                    'We need to increase the length of array texts, if child has more than one property
                    'holding the text value.
                    ReDim texts(0)
                    texts(0) = child.label
                    node.menuTexts = texts
                    
                    'Set the fullpath of this tree node
                    If .fullpath<>"" Then
                        node.fullpath = .fullpath & MUHierarchySeparator & GetFirstNonBlankValue(node.menuTexts)
                    Else
                        node.fullpath =  GetFirstNonBlankValue(node.menuTexts)
                    End If
                    
                    Set children(i) = node
                    
                    If aqObject.IsSupported(child, "children") Then
                        Call getMenuHierachyRecursive(node, child.children)
                    End If                    
                End If
                
            Next
            .children = children
        End If
    End With
    
End Function

'############################################################################
'#
'#   Sub getMenuHierachy(menuTree, topWindow, menu) 
'#
'# DESCRIPTION:
'#
'#     Get a menu tree which will hold information of each node of menu
'#     This function will take some time to open each menu.
'#     If we only need the text of menu node, we call getMenuHierachySimply(menuTree, menu)
'#      
'# INPUT PARAMETERS:
'#
'#      menuTree    Out:    FlexMenuInfo object, it is a tree structure
'#      topWindow   In:     A Flex window object, from where we begin to search for MenuControl object
'#      menu        In:     A Flex MenuControl or MenuBar object          
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 20, 2011
'# History:
'#
'#      DEC 20, 2011    Original Release
'#
'############################################################################
Sub getMenuHierachy(menuTree, topWindow, menu)
    Dim child
    'children contain a set of FlexMenuInfo object
    'node is FlexMenuInfo object
    'texts contain the possible text for this node
    Dim children(), texts(), node
    Dim i
    Dim childMenuControl
    
    Dim menuProps
    Dim menuValues
    Dim delayTime
    
    delayTime = 100   

    menuProps = Array("ObjectType","ObjectGroupIndex")
    menuValues = Array("MenuControl","0")     
    
    On Error Resume Next    
    With menuTree
        If StringContains(menu.ObjectType, "MenuControl") Then
            .childCount = menu.ChildCount
            If .childCount > 0 Then
                ReDim children(.childCount-1)
                'It seems that Flex puts the menuitem with inverse order
                'So begin from the last child to the first 
                For i = (.childCount -1) To 0 Step -1
                    Set child = menu.Child(i)
                    Set node = InitFlexMenuInfo()
                    Set node.parent = menuTree
                    node.enabled = child.Enabled
                    'If the child is a radio button or check button                    
                    'We can only get the MenuItemRenderer, how can we set the 'checked' property of node?
                    'There is no 'Checked' property for MenuItemRenderer
                    'node.checked = child.Checked
                    
                    If StringContains(child.ObjectType, "MenuItemRenderer") Then
                    
                        Call DDGUIUtilities.DDGGetTextValues(child, texts)
                        node.menuTexts = texts
                        
                        'Set the fullpath of this tree node
                        If .fullpath<>"" Then
                            node.fullpath = .fullpath & MUHierarchySeparator & GetFirstNonBlankValue(node.menuTexts)
                        Else
                            node.fullpath =  GetFirstNonBlankValue(node.menuTexts)
                        End If
                        
                        'Hover mouse on the menuitem to make the child 'MenuControl' visible
                        child.HoverMouse
                        'Wait for the 'MenuControl' to be visible if exist
                        Delay delayTime
                        
                        'Try to get the child 'MenuControl'.
                        'Sometimes ObjectGroupIndex increment for child MenuControl,
                        'Sometimes ObjectGroupIndex is NOT in that order, the new appeared MenuControl always
                        'has 0 as the value for property ObjectGroupIndex.
                        'How can we know which index to use?
                        'Try the incremented index firstly so that we can know the order.                        
                        'Increment the ObjectGroupIndex
                        menuValues(1) = menu.ObjectGroupIndex + 1

                        'If the order of ObjectGroupIndex is inverse (not incremental), ObjectGroupIndex of previous
                        'MenuControl is always 0, we will find MenuControl with index=1. As we click the menu 
                        'item to show the MenuControl of next level, so the previous MenuControl's index will change
                        'dynamically from 0 to 1, we should get the same MenuControl as previous one. 
                        'If the order of ObjectGroupIndex is incremental, we will always to find the MenuControl with
                        'a different index, we should get a different MenuControl.                                            
                        
                        Sys.Refresh
                        Set childMenuControl = topWindow.FindChild(menuProps,menuValues,4)
                        'If we can't get MenuControl with incremented index, which means there is no new MenuCotrol
                        'Just process the next menu item.
                        
                        'If we can get MenuControl but it is the same MenuControl object as previous one, we know
                        'the order of ObjectGroupIndex is inverse (not incremental), we will try the 0 index and find again.                        
                        If childMenuControl.Exists And _
                           StringEqual(childMenuControl.FlexObject.uid, menu.FlexObject.uid) Then
                            SAFSDebug "Try to find MenuControl by ObjectGroupIndex '0'", DEBUG_DEBUG
                            menuValues(1) = 0
                            Set childMenuControl = topWindow.FindChild(menuProps,menuValues,4) 
                        End If
                        
                        'If the childMenuControl is the same as menu, a dead loop will occur, need to handle.
                        If childMenuControl.Exists Then
                            If Not StringEqual(childMenuControl.FlexObject.uid, menu.FlexObject.uid) Then
                                Call getMenuHierachy(node, topWindow, childMenuControl)
                            End If     
                        End If
  
                    Else
                        'For item other than 'MenuItemRenderer', what should be set to node???
                        SAFSDebug "child's type is " & child.ObjectType & ". what should be set to node???", DEBUG_INFO    
                    End If
                    Set children(.childCount -1-i) = node      
                Next
                .children = children       
            End If
        ElseIf StringContains(menu.ObjectType, "MenuBar") Then
            .childCount = menu.ChildCount
            If .childCount > 0 Then
                ReDim children(.childCount-1)
                'It seems that Flex put the menuitem with inverse order
                'So begin from the last child to the first 
                For i = (.childCount -1) To 0 Step -1
                    Set child = menu.Child(i)
                    Set node = InitFlexMenuInfo()
                    Set node.parent = menuTree
                    node.enabled = child.Enabled
                    
                    If StringContains(child.ObjectType, "MenuBarItem") Then

                        Call DDGUIUtilities.DDGGetTextValues(child, texts)
                        node.menuTexts = texts
                        
                        'Set the fullpath of this tree node
                        If .fullpath<>"" Then
                            node.fullpath = .fullpath & MUHierarchySeparator & GetFirstNonBlankValue(node.menuTexts)
                        Else
                            node.fullpath =  GetFirstNonBlankValue(node.menuTexts)
                        End If
                                                
                        'Hover mouse on the menuitem to make the child 'MenuControl' visible
                        child.HoverMouse
                        'Wait for the 'MenuControl' to be visible if exist
                        Delay delayTime
                        
                        'Try to get the child 'MenuControl' whose 'ObjectGroupIndex' should be 0
                        menuValues(1) = 0
                        Set childMenuControl = topWindow.FindChild(menuProps,menuValues,4)
                        If Not childMenuControl.Exists Then
                            'If we can't find a MenuControl object, we can click at the MenuBarItem
                            'After this click, the MenuControl should popup when we hover mouse on menu item
                            'Be careful!!! Click may trigger some event of the flex application
                            child.Click
                            Delay delayTime
                            Set childMenuControl = topWindow.FindChild(menuProps,menuValues,4)
                        End If
                        
                        If childMenuControl.Exists Then
                            Call getMenuHierachy(node, topWindow, childMenuControl)
                        End If                        
                    Else
                        'For item other than 'MenuBarItem', what should be set to node???
                        SAFSDebug "child's type is " & child.ObjectType & ". what should be set to node???", DEBUG_INFO    
                    End If
                    Set children(.childCount -1-i) = node      
                Next
                .children = children       
            End If        
        Else
            SAFSDebug "MenuItem's type is " & menu.ObjectType & ". Not added to menu tree.", DEBUG_INFO
        End If
    End With
    
End Sub

'Return the first non blank string value from an string array.
'values     An array of String values
Function GetFirstNonBlankValue(values)
    Dim i
    GetFirstNonBlankValue = ""
    For i=LBound(values) To UBound(values)
        If values(i)<>"" Then
            GetFirstNonBlankValue = values(i)
            Exit Function
        End If
    Next
End Function

'############################################################################
'#
'#   Sub printMenuHierachy(menuTree,level)  
'#
'# DESCRIPTION:
'#
'#     Print the tree
'#      
'# INPUT PARAMETERS:
'#
'#      menuTree    In:     FlexMenuInfo object, it is a tree structure
'#      level       In:     Integer, the level of the menu item within the tree       
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 20, 2011
'# History:
'#
'#      DEC 20, 2011    Original Release
'#
'############################################################################
Sub printMenuHierachy(menuTree,level)
    Dim child, i, j, ident    
        
    With menuTree
        If .childCount > 0 Then 
            For i = 0 To (.childCount -1)
                Set child = .children(i)
                If UBound(child.menuTexts) >= 0 Then
                    ident = ""
                    For j = 0 To level
                        ident = ident & "  "
                    Next
                    SAFSDebug CStr(level) & ident & child.menuTexts(0), DEBUG_INFO
                    Call printMenuHierachy(child, level+1)
                End If     
            Next
        End If      
    End With
    
End Sub

'############################################################################
'#
'#   Function getTopWindow(component)
'#
'# DESCRIPTION:
'#
'#     Get the top Page object of component.
'#      
'# INPUT PARAMETERS:
'#
'#      component    Flex object.          
'#
'# RETURNS:
'#  
'#      Top Page object
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: DEC 16, 2011
'# History:
'#
'#      DEC 16, 2011    Original Release
'#
'############################################################################
Function getTopWindow(component)
    Dim topWindow
    
    Set topWindow = component
    Do While True
        If InStr(LCase(topWindow.Name),"page") > 0 Then
            SAFSDebug "Top window '" & topWindow.Name & "' has been found.", DEBUG_INFO   
            Exit Do
        End If
            
        If topWindow.Parent is Nothing Then
            SAFSDebug topWindow.Name & " has not parent.", DEBUG_ERROR
            Exit Function
        End If

        Set topWindow = topWindow.Parent
    Loop
    
    Set getTopWindow = topWindow
    
End Function

'##########################################################################
'#
'#   Function GetObjectData(menuBar, ByRef itemArray())
'#
'# DESCRIPTION:
'#
'#     Get fullpath of each menu item
'#      
'# INPUT PARAMETERS:
'#
'#      menuBar     In:    MenuBar TC Object
'#      itemArray   Out:   An array to contain fullpath of all menu items         
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: AUG 16, 2012
'# History:
'#
'#      AUG 16, 2012    Original Release
'#
'############################################################################
Function GetObjectData(menuBar, ByRef itemArray())
    Dim menu, menuTree

    On Error Resume Next
    GetObjectData = False
    If Not loadMenuCache(False, menuBar) Then
        SAFSDebug "Fail to load menu items into cache.", DEBUG_ERROR
    Else
        Call getFullPathFromNode(MenuTreeCache, itemArray)
        GetObjectData = True
    End If
    
End Function

'##########################################################################
'#
'#   Function getFullPathFromNode(treeNode, ByRef itemArray())
'#
'# DESCRIPTION:
'#
'#     Recursively get the fullpath of each tree node, and store it in itemArray.
'#      
'# INPUT PARAMETERS:
'#
'#      treeNode    In:    FlexMenuInfo object, it is a tree structure
'#      itemArray   Out:   An array to contain fullpath of tree node        
'#  
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Lei Wang
'# Orig   Date: AUG 16, 2012
'# History:
'#
'#      AUG 16, 2012    Original Release
'#
'############################################################################
Function getFullPathFromNode(treeNode, ByRef itemArray())
    Dim size, i
    
    size = UBound(itemArray)
    
    If treeNode.fullpath<>"" Then
        Redim Preserve itemArray(size+1)
        itemArray(size+1) = treeNode.fullpath
    End If
    
    For i=0 To (treeNode.childCount-1)
        Call getFullPathFromNode(treeNode.children(i), itemArray)
    Next
    
End Function
      
'############################################################################
'#
'#   Sub Main ()
'#
'# DESCRIPTION:
'#
'#      Entry point to process a StepDriver ACTION COMMAND on a MENUBAR.
'#      The routine merely reads the Global otrd.testcommand and 
'#      calls the appropriate subroutine to process it.  
'#
'#      If the testcommand is unrecognized it will log a WARNING_MESSAGE and
'#      exit with a WARNING status.
'#      
'# DATA TABLE PARAMETERS:
'#
'#      none    -   the called subroutine has the requirements
'#
'# ERRORS:
'#
'#      none
'#
'# Orig Author: Dharmesh Patel
'# Orig   Date: SEP 21, 2011
'# History:
'#
'#      SEP 21, 2011    Original Release
'#      JUN 12, 2012    (Lei Wang) Modify to treat SELECTMENUITEM as SELECTUNVERIFIEDMENUITEM, see defect testhelp 89432
'#
'############################################################################
Sub FlexMenuBarMain()

    with otrd
        'Set the menu tree cache if it doesn't exist or the .compGUIID is another menu control

        'TODO If cache menu items is not time consuming, we will cache them for keyword SELECTMENUITEM 
        'StringEqualIgnoreCase(.testcommand, "SELECTMENUITEM") Or _
        If StringEqualIgnoreCase(.testcommand, "SELECTMENUITEMCONTAINS") Or _
           StringEqualIgnoreCase(.testcommand, "VERIFYMENUITEMCONTAINS") Or _
           StringEqualIgnoreCase(.testcommand, "VERIFYMENUITEM") Or _
           StringEqualIgnoreCase(.testcommand, "RESETMENUCACHE") Then
            loadMenuCache False, .compGUIID
        End If
    
        Select Case UCase(.testcommand)
            
            Case "SELECTMENUITEM"
                 
                'TODO If cache menu items is not time consuming, we will do verification for keyword SELECTMENUITEM       
                'SelectMenuItem False, False, True
                'Now, the keyword SELECTMENUITEM just behave as SELECTUNVERIFIEDMENUITEM
                SelectMenuItem False, False, False
                 
            Case "SELECTMENUITEMCONTAINS"
                       
                 SelectMenuItem True, False, True
                 
            Case "SELECTUNVERIFIEDMENUITEM"
                       
                 SelectMenuItem False, False, False

            Case "VERIFYMENUITEM"
                       
                 VerifyMenuItem False, False
                 
            Case "VERIFYMENUITEMCONTAINS"
                       
                 VerifyMenuItem True, False
                 
            Case "RESETMENUCACHE"
                       
                 ResetMenuCache               
                                  
            Case Else

                'GenericUnimplementedCommand
                HandleGenericCommand
            
        End Select

    End With
    
End Sub

Sub Main()
    Dim win, menuControlOrBar, menutree, topwin
    Dim isPopup
    
    On Error Resume Next
    LogDebugMessageToTool = True
    Set win = Sys.Process("iexplore").Page("http://tadsrv/flexapp/")     
    isPopup = True
    'isPopup = False

    If isPopup Then
        showPopupMenu(win) 
        Set menuControlOrBar = getPoppupMenu(win)  
    Else
        Set menuControlOrBar = getMenuBar(win)
    End If
     
    Set topwin = getTopWindow(menuControlOrBar)
    
    'If the MenuTreeCache is not set, then set it.
    'ResetMenuCache False, menuControlOrBar
    'printMenuHierachy MenuTreeCache, 0
    
    Call TestClickMenuItem(topwin, menuControlOrBar, isPopup)

    'Call TestgetFullNameMenuPathNode(MenuTreeCache)
    Call TestVerifyMenuStatus(MenuTreeCache)
            
End Sub

Sub showPopupMenu(win)
    'How to make Ctrl+MouseClick work???
    win.Keys "[Hold]^"
    win.Click
    win.Keys "[Release]"
    Delay 100
End Sub

Function getMenuBar(win)
    Dim props, values

    On Error Resume Next    
    props = Array( "ObjectType" , "ObjectLabel")  
    values = Array( "MenuBar", "menuBar")
  
    Set getMenuBar = win.FindChild(props,values, 5, True)  
End Function

Function getPoppupMenu(win)
    Dim props, values

    On Error Resume Next    
    props = Array( "ObjectType" , "ObjectLabel")
    values = Array( "MenuControl", "myPopupMenu")  
  
    Set getPoppupMenu = win.FindChild(props,values, 5, True)  
End Function

Sub TestClickMenuItem(topwin, menuControlOrBar, isPopup)
    On Error Resume Next  
    Call clickMenuItem(topwin, menuControlOrBar, "Weird->Second->Third", True, False, "", False)
    If isPopup Then
        showPopupMenu(topwin)
    End If 
    Call clickMenuItem(topwin, menuControlOrBar, "Wei->Sec->Fou", True, False, "", True)
End Sub

Sub TestgetFullNameMenuPathNode(menutree)
    Dim fullpath, menuPath, node
    Dim separator
    
    On Error Resume Next  
    separator = MUHierarchySeparator
    
    menuPath = "File->Exit"
    Set node = getFullNameMenuPathNode(menutree, menuPath, False, False, "", separator)
    fullpath = getFullNamePath(node, separator)
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO
    
    menuPath = "Wei->Sec->Fou"
    Set node = getFullNameMenuPathNode(menutree, menuPath, True, False, "", separator)
    fullpath = getFullNamePath(node, separator)
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO

    menuPath = "Help->About"
    Set node = getFullNameMenuPathNode(menutree, menuPath, False, False, "", separator)
    fullpath = getFullNamePath(node, separator)    
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO
      
End Sub

Sub TestVerifyMenuStatus(menutree)
    Dim fullpath, menuPath, indexPath, node
    Dim menustatus
    Dim separator
    
    On Error Resume Next  
    separator = MUHierarchySeparator
        
    menuPath = "File->Exit"
    indexPath = ""
    menustatus = "Enabled"
    Set node = getFullNameMenuPathNode(menutree, menuPath, False, False, indexPath, separator)
    fullpath = getFullNamePath(node, separator)
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO
    If verifyMenuStatus(node, menustatus)  Then
        SAFSDebug "Verification OK. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO
    Else
        SAFSDebug "Verification Fail. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO        
    End If
    
    menuPath = "Wei->Sec"
    menustatus = "Enabled Menu With 2 MenuItems"
    Set node = getFullNameMenuPathNode(menutree, menuPath, True, False, indexPath, separator)
    fullpath = getFullNamePath(node, separator)
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO
    If verifyMenuStatus(node, menustatus)  Then
        SAFSDebug "Verification OK. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO
    Else
        SAFSDebug "Verification Fail. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO           
    End If

    menuPath = "Help->About"
    menustatus = "Grayed"
    indexPath = "1->1"
    Set node = getFullNameMenuPathNode(menutree, menuPath, False, False, indexPath, separator)
    fullpath = getFullNamePath(node, separator)
    SAFSDebug "fullpath = " & fullpath, DEBUG_INFO
    If verifyMenuStatus(node, menustatus)  Then
        SAFSDebug "Verification OK. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO
    Else
        SAFSDebug "Verification Fail. MenuItem: '"& fullpath & "', Status: '"&menustatus&"'.", DEBUG_INFO           
    End If
      
End Sub